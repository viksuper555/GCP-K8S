resources:
- name: {{ env["deployment"] }}
  {% if properties["apiVersion"] == "v1beta1" %}
  type: gcp-types/container-v1beta1:projects.locations.clusters
  {% else %}
  type: gcp-types/container-v1:projects.zones.clusters
  {% endif %}
  properties:
    {% if properties["apiVersion"] == "v1beta1" %}
    parent: projects/{{ env["project"] }}/locations/{{ properties["location"] }}
    {% else %}
    zone: {{ properties["zone"] }}
    {% endif %}
    cluster:
      {% if properties["clusterName"] %}
      name: {{ properties['clusterName'] }}
      {% endif %}
      {% if properties["monitoringService"] %}
      monitoringService: {{ properties["monitoringService"] }}
      {% endif %}
      {% if properties["loggingService"] %}
      loggingService: {{ properties["loggingService"] }}
      {% endif %}
      {% if properties["httpLoadBalancing"] is defined %}
      addonsConfig:
        httpLoadBalancing:
          disabled: {{ not properties["httpLoadBalancing"] }}
      {% endif %}
      {% if properties["locations"] %}
      locations: {{ properties["locations"].split(",") }}
      {% endif %}
      {% if properties["currentMasterVersion"] %}
      currentMasterVersion: {{ properties["currentMasterVersion"] }}
      {% endif %}
      {% if properties["initialClusterVersion"] %}
      initialClusterVersion: {{ properties["initialClusterVersion"] }}
      {% endif %}
      {% if properties["maintenanceWindowDuration"] %}
      maintenancePolicy:
        window:
          dailyMaintenanceWindow:
            startTime: {{ properties["maintenanceWindowStartTime"] }}
            duration: {{ properties["maintenanceWindowDuration"] }}
      {% endif %}
      nodePools:
      - name: {{ properties['nodePoolName']}}
        config:
          machineType: {{ properties['machineType']}}
          diskSizeGb: {{ properties['diskSizeGb']}}
          imageType: {{ properties["imageType"] }}
          oauthScopes: {{ properties["oauthScopes"].split(",") }}
          serviceAccount: $(ref.{{ env["deployment"] }}-cluster-service-account.email)
          spot: {{ properties["spot"] }}
        {% if properties["nodeVersion"] %}
        version: {{ properties["nodeVersion"] }}
        {% endif %}
        initialNodeCount: {{ properties["initialNodeCount"] }}
        autoscaling:
          enabled: {{ properties["autoscaling"] }}
          {% if properties["autoscaling"] %}
          minNodeCount: {{ properties["initialNodeCount"] }}
            {% if properties["autoscaling"] %}
          maxNodeCount: {{ properties["maxNodeCount"] }}
            {% elif properties["autoscaling"] %}
          totalMaxNodeCount: {{ properties["totalMaxNodeCount"] }}
            {% endif %}
          {% endif %}
        management:
          autoUpgrade: {{ properties["autoUpgrade"] }}
          autoRepair: {{ properties["autoRepair"] }}

- name: {{ env["deployment"] }}-cluster-service-account
  type: gcp-types/iam-v1:projects.serviceAccounts
  properties:
    accountId: {{ properties['serviceAccountId'] }}
    displayName: {{ properties['serviceAccountDisplayName'] }}
    description: {{ properties['serviceAccountDescription'] }}

- name: {{ env["deployment"] }}-gke-type
  type: gcp-types/deploymentmanager-v2beta:typeProviders
  properties:
    descriptorUrl: https://$(ref.{{ env["deployment"] }}.endpoint)/openapi/v2
    options:
      validationOptions:
        schemaValidation: IGNORE_WITH_WARNINGS
      inputMappings:
      - fieldName: Authorization
        location: HEADER
        value: >
          $.concat("Bearer ", $.googleOauth2AccessToken())
      - fieldName: metadata.resourceVersion
        location: BODY
        methodMatch: ^(put|patch)$
        value: $.resource.self.metadata.resourceVersion
      - fieldName: id
        location: PATH
        methodMatch: ^(put|get|delete|post|patch)$
        value: $.resource.properties.id
      - fieldName: name
        location: PATH
        methodMatch: ^(put|get|delete|post|patch)$
        value: $.resource.properties.metadata.name
      - fieldName: namespace
        location: PATH
        methodMatch: ^(put|get|delete|post|patch)$
        value: $.resource.properties.namespace
    customCertificateAuthorityRoots:
    - $(ref.{{env["deployment"]}}.masterAuth.clusterCaCertificate)
